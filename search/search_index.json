{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Kaleido Subtitling Style Handbook","text":"<p>Disclaimer</p> <p>This document is a living document, and is not meant to be the definitive word on the subject, but rather a collection of guidelines and best practices that we have found to be effective.</p> <p>Editing Guidelines</p> <p>Always ensure you follow the guidelines provided to you by the group or company you work for! This is especially important if you're working in an official capacity.</p> <p>This document covers different aspects of subtitling best practices. These guidelines are tailored to portraying subtitles in a way that is both accessible and appealing to viewers.</p> <p>The contents of this document are written by and for Kaleido's subtitlers, and are not affiliated with any streaming service or other entity. Many guidelines covered here fall in line with common practices in the English fansubbing community, but may deviate in certain aspects.</p> <p>These are not hard rules you must follow to the letter, nor are they intended to be the definitive word on the subject. The hallmark of a good subtitler is knowing how to adapt as the situation demands, and when one should deviate from the norm.</p>"},{"location":"#starting-out","title":"Starting out","text":"<p>This guide covers a lot of topics, and can be overwhelming to read at first. For beginners, it is recommended to start with the roles page, and work your way up from there.</p> <p>The most important thing you can do is to start creating. While we do our best to cover all aspects of subtitling, there is no better teacher than practice, so get practicing!</p> <p>If you need help getting started, or get stuck on any specific aspect of subtitling, you shouldn't hesitate to ask for help. Our Discord server is a great place to start, and our community is always happy to help each other out, regardless of skill level and what kind of subtitles you want to create.</p> <p>If you're looking for a fansubbing hub to chat with other fansubbers and learn more about the community and the subtitling process, we highly recommend checking out the Good Job! Media Discord. That's where most modern-day fansubbers congregate at the time of writing, and you'll learn a lot there, even if you're just lurking.</p>"},{"location":"resources/","title":"Additional Resources","text":"<p>Here is a list of additional resources that may be useful as additional references, or as tools to help with the process.</p>"},{"location":"resources/#streaming-service-style-guides","title":"Streaming service style guides","text":"<ul> <li>Netflix's Timed Text Style Guide</li> <li>ATAA French Subtitling Standards</li> </ul>"},{"location":"resources/#writer-style-guides","title":"Writer style guides","text":"<ul> <li>Chicago Manual of Style</li> </ul>"},{"location":"resources/#software","title":"Software","text":"<ul> <li>SubKt</li> </ul>"},{"location":"resources/#other-relevant-fansubbing-guides","title":"Other relevant fansubbing guides","text":"<ul> <li>Why do so many groups fail at styling? by Underwater</li> <li>Subtitle Appearance Analysis by Max Deryagin</li> </ul>"},{"location":"building/","title":"Building our subtitles","text":"<p>This document covers a high-level overview of SubKt, our build script template, and how to use and modify it depending on the project.</p>"},{"location":"building/#what-is-subkt","title":"What is SubKt?","text":"<p>SubKt is a build script template for subtitles. It is designed to be a starting point for any project, and can be modified to fit the needs of said project. It also includes in-depth documentation.</p> <p>If includes a lot of useful features for building a subtitle file using individual components, allowing subtitlers to work with individual files without having to worry about touching files that other subtitlers are working in.</p> <p>It also comes with muxing functionality, adding stuff like font checking, CRC32 hashing, batching, distributing, and more.</p>"},{"location":"building/#kaleido-project-template","title":"Kaleido project template","text":"<p>Kaleido uses SubKt to build subtitle files and mux files.</p> <p>The Kaleido project template is a Github repository that can be used as a template for new projects. It includes a pre-configured build setup, as well as a basic project structure.</p> <p>Project-dependent settings</p> <p>Our template is designed to be a starting point for any new project, which means you must modify the template to fit the needs of your project every time you start a new one!</p> <p>For a quickstart guide, see the getting started document.</p> <p>For information on how to modify the template, see the following documents:</p> <ul> <li>Project structure</li> <li>Subtitle Properties</li> <li>Build Script</li> </ul> <p>For running the build script, see the building your project subtitles section.</p>"},{"location":"building/getting-started/","title":"Getting Started","text":""},{"location":"building/getting-started/#prerequisites","title":"Prerequisites","text":"<p>To begin using this template for your subtitling project, you'll need to ensure you have the necessary dependencies installed.</p> <ul> <li>SubKt for subtitle processing</li> <li>mkvmerge for video muxing</li> <li>A compatible version of the Java Development Kit (JDK)</li> </ul> <p>JDK version</p> <p>Currently, JDK versions 14, 15, and 16 are supported, with versions 14 and 15 working out-of-the-box with SubKt. Later versions may work. If you encounter any issues, make sure Gradle is using the correct JDK version.</p>"},{"location":"building/getting-started/#setting-up-your-project","title":"Setting up your project","text":"<p>Navigate to the project-template GitHub page, then click the \"Use this template\" button in the top-right corner of the page to create a new repository based on this template.</p> <p></p> <p>Next, configure your project files. Generally speaking, you'll only need to configure the following files:</p> <ul> <li><code>build.gradle.kts</code></li> <li><code>sub.properties</code></li> </ul> <p>For more details on how to configure these files, see their respective documentation:</p> <ul> <li>build.gradle.kts</li> <li>sub.properties</li> </ul>"},{"location":"building/getting-started/#building-your-project-subtitles","title":"Building your project subtitles","text":"<p>You can build your project using the Gradle wrapper.</p> <p>Calling the Gradle wrapper</p>  Windows Unix <pre><code>gradlew.bat mux.01\n</code></pre> <pre><code>./gradlew mux.01\n</code></pre> <p>Using other commands</p> <p>You can replace <code>mux</code> with other commands like <code>chapters</code>, <code>merge</code>, <code>cleanmerge</code>, or <code>swap</code>  depending on your needs.  The output of these commands (except for <code>mux</code>) can be found in the <code>build/</code> directory.</p> <p>The output of the <code>mux</code> command is a single <code>.mkv</code> file with the subtitle embedded in it and any other associated files attached to it.</p> <p>By default, the output directory is <code>[${group}] ${jp_title} (${codec_info})</code>. This directory will contain the final muxed <code>.mkv</code> files, named according to the <code>muxout</code> pattern: <code>[${group}] ${jp_title} - ${tvdb} - (${codec_info}) [$mux.crc].mkv</code></p> <p>Changing the output directory</p> <p>You can change the output directory and filename pattern by editing the <code>muxout</code> and <code>title</code> properties in the <code>sub.properties</code> file! See the properties documentation for more information.</p>"},{"location":"building/build-script/","title":"Build script","text":"<p>The build script is the script that reads all the subtitle properties and uses them to merge subtitle files and mux them into a single <code>.mkv</code> file.</p> <p>The build script is located at <code>./build.gradle.kts</code>, and can be called with the <code>gradlew</code> wrapper.</p> <p>Calling the build script</p>  Windows Unix <pre><code>gradlew mux.01\n</code></pre> <pre><code>./gradlew mux.01\n</code></pre> <p>This is what a default build script looks like, with annotations added to explain each line.</p> <p>Default build script</p> <pre><code>import myaa.subkt.ass.*\nimport myaa.subkt.tasks.*\nimport myaa.subkt.tasks.Mux.*\nimport myaa.subkt.tasks.Nyaa.*\nimport java.awt.Color\nimport java.time.*\n\nplugins {\n    id(\"myaa.subkt\")\n}\n\n// Retrieve the script's playRes values\nfun ASSFile.getPlayRes(): Pair&lt;Int?, Int?&gt; {\n    return this.scriptInfo.playResX to this.scriptInfo.playResY\n}\n\nfun Provider&lt;String&gt;.getPlayRes(): Pair&lt;Int?, Int?&gt; {\n    return ASSFile(File(this.get())).getPlayRes()\n}\n\n// Check whether a string contains parts of a ktemplate\nfun String.isKaraTemplate(): Boolean {\n    return this.startsWith(\"code\") || this.startsWith(\"template\") || this.startsWith(\"mixin\")\n}\n\n// Check whether a line is part of a ktemplate\nfun EventLine.isKaraTemplate(): Boolean {\n    return this.effect.isKaraTemplate()\n}\n\n// Check if a line is entirely blank (no text, actor, or effect)\nfun EventLine.isBlank(): Boolean {\n    return this.text.isEmpty() &amp;&amp; this.actor.isEmpty() &amp;&amp; this.effect.isEmpty()\n}\n\nsubs {\n    readProperties(\"sub.properties\")  // Read properties from sub.properties file\n    episodes(getList(\"episodes\"))     // Get list of episodes from properties\n\n    // Merge all the individual script components\n    merge {\n        from(get(\"dialogue\"))  // Include the main dialogue file\n\n        if (propertyExists(\"OP\")) {\n            from(get(\"OP\")) {\n                syncSourceLine(\"sync\")     // Specify the sync line in the OP file\n                syncTargetLine(\"opsync\")   // Specify the target sync line in the main file\n            }\n        }\n\n        if (propertyExists(\"ED\")) {\n            from(get(\"ED\")) {\n                syncSourceLine(\"sync\")     // Specify the sync line in the ED file\n                syncTargetLine(\"edsync\")   // Specify the target sync line in the main file\n            }\n        }\n\n        fromIfPresent(get(\"extra\"), ignoreMissingFiles = true)  // Include extra file if present\n        fromIfPresent(getList(\"INS\"), ignoreMissingFiles = true)  // Include INS files if present\n        fromIfPresent(getList(\"TS\"), ignoreMissingFiles = true)   // Include TS files if present\n\n        fromIfPresent(get(\"render_warning\"), ignoreMissingFiles = true)  // Include render warning if present\n\n        includeExtraData(false)        // Don't include extra data\n        includeProjectGarbage(false)   // Don't include project garbage\n\n        // Try to set the LayoutRes values from the playRes values of the dialogue file.\n        // Falls back to 1920x1080 if not found\n        val (resX, resY) = get(\"dialogue\").getPlayRes()\n\n        scriptInfo {\n            title = get(\"group\").get()\n            scaledBorderAndShadow = true\n            wrapStyle = WrapStyle.NO_WRAP\n            values[\"LayoutResX\"] = resX ?: 1920  // Set LayoutResX, default to 1920 if not found\n            values[\"LayoutResY\"] = resY ?: 1080  // Set LayoutResY, default to 1080 if not found\n        }\n    }\n\n    // Remove ktemplate and empty lines from the final output\n    val cleanmerge by task&lt;ASS&gt; {\n        from(merge.item())\n        // ass { events.lines.removeIf { it.isKaraTemplate() or it.isBlank() } }\n        ass { events.lines.removeIf { it.isBlank() } }  // Remove blank lines\n    }\n\n    // Generate chapters from dialogue file\n    chapters {\n        from(get(\"chapters\"))\n        chapterMarker(\"chapter\")  // Use \"chapter\" as the chapter marker\n    }\n\n    // Run swapper script for honorifics and other swaps\n    swap {\n        from(cleanmerge.item())\n\n        styles(Regex(\"Main|Default|Alt\"))  // Apply swaps to these styles\n    }\n\n    // Finally, mux following the conventions listed here: https://thewiki.moe/advanced/muxing/#correct-tagging\n    mux {\n        title(get(\"title\"))  // Set the title of the muxed file\n\n        // Optionally specify mkvmerge version to use\n        if (propertyExists(\"mkvmerge\")) {\n            mkvmerge(get(\"mkvmerge\"))\n        }\n\n        from(get(\"premux\")) {\n            tracks {\n                include(track.type == TrackType.VIDEO || track.type == TrackType.AUDIO)  // Include only video and audio tracks\n            }\n\n            video {\n                lang(\"und\")              // Set video language to undefined\n                name(get(\"vtrack\"))      // Set video track name\n                default(true)            // Set as default video track\n            }\n\n            audio {\n                lang(\"jpn\")              // Set audio language to Japanese\n                name(get(\"atrack\"))      // Set audio track name\n                default(true)            // Set as default audio track\n                forced(false)            // Not forced\n            }\n\n            includeChapters(false)       // Don't include chapters from premux\n            attachments { include(false) }  // Don't include attachments from premux\n        }\n\n        from(cleanmerge.item()) {\n            tracks {\n                lang(\"eng\")                 // Set subtitle language to English\n                name(get(\"strack_reg\"))     // Set subtitle track name\n                default(true)               // Set as default subtitle track\n                forced(false)               // Not forced\n                compression(CompressionType.ZLIB)  // Use ZLIB compression\n            }\n        }\n\n        from(swap.item()) {\n            subtitles {\n                lang(\"enm\")                 // Set honorific subtitle language to Middle English\n                name(get(\"strack_hono\"))    // Set honorific subtitle track name\n                default(true)               // Set as default subtitle track\n                forced(false)               // Not forced\n                compression(CompressionType.ZLIB)  // Use ZLIB compression\n            }\n        }\n\n        chapters(chapters.item()) { lang(\"eng\") }  // Include chapters with English language\n\n        // Fonts handling\n        skipUnusedFonts(true)  // Skip attaching unused fonts\n\n        attach(get(\"common_fonts\")) {\n            includeExtensions(\"ttf\", \"otf\")  // Attach common fonts\n        }\n\n        attach(get(\"fonts\")) {\n            includeExtensions(\"ttf\", \"otf\")  // Attach episode-specific fonts\n        }\n\n        // Get OP/ED fonts if necessary\n        if (propertyExists(\"OP\")) {\n            attach(get(\"opfonts\")) {\n                includeExtensions(\"ttf\", \"otf\")  // Attach OP fonts\n            }\n        }\n\n        if (propertyExists(\"ED\")) {\n            attach(get(\"edfonts\")) {\n                includeExtensions(\"ttf\", \"otf\")  // Attach ED fonts\n            }\n        }\n\n        out(get(\"muxout\"))  // Set output file name and path\n    }\n\n    // =================================================================================================================\n    // NCOP/EDs\n    tasks(getList(\"ncs\")) {\n        merge {\n            from(get(\"ncsubs\"))  // Include NC subtitle file\n\n            includeExtraData(false)\n            includeProjectGarbage(false)\n\n            scriptInfo {\n                title = get(\"group\").get()\n                originalScript = get(\"group\").get()\n                scaledBorderAndShadow = true\n            }\n        }\n\n        val cleanncmerge by task&lt;ASS&gt; {\n            from(merge.item())\n            // ass { events.lines.removeIf { it.isKaraTemplate() or it.isBlank() } }\n            ass { events.lines.removeIf { it.isBlank() } }  // Remove blank lines\n        }\n\n        chapters {\n            from(cleanncmerge.item())\n            chapterMarker(\"ncchapter\")  // Use \"ncchapter\" as the chapter marker for NC\n        }\n\n        mux {\n            title(get(\"title\"))  // Set the title of the muxed NC file\n\n            from(get(\"ncpremux\")) {\n                tracks {\n                    include(track.type == TrackType.VIDEO || track.type == TrackType.AUDIO)  // Include only video and audio tracks\n                }\n\n                video {\n                    lang(\"jpn\")              // Set video language to Japanese\n                    name(get(\"vtrack\"))      // Set video track name\n                    default(true)            // Set as default video track\n                }\n                audio {\n                    lang(\"jpn\")              // Set audio language to Japanese\n                    name(get(\"atrack\"))      // Set audio track name\n                    default(true)            // Set as default audio track\n                }\n                includeChapters(false)       // Don't include chapters from NC premux\n                attachments { include(false) }  // Don't include attachments from NC premux\n            }\n\n            from(cleanncmerge.item()) {\n                tracks {\n                    lang(\"eng\")                 // Set subtitle language to English\n                    name(get(\"strack_reg\"))     // Set subtitle track name\n                    default(true)               // Set as default subtitle track\n                    forced(false)               // Not forced\n                    compression(CompressionType.ZLIB)  // Use ZLIB compression\n                }\n            }\n\n            chapters(chapters.item()) { lang(\"eng\") }  // Include chapters with English language\n\n            skipUnusedFonts(true)  // Skip attaching unused fonts\n\n            attach(get(\"ncfonts\")) {\n                includeExtensions(\"ttf\", \"otf\")  // Attach NC-specific fonts\n            }\n\n            attach(get(\"common_fonts\")) {\n                includeExtensions(\"ttf\", \"otf\")  // Attach common fonts\n            }\n\n            out(get(\"ncmuxout\"))  // Set output file name and path for NC\n        }\n    }\n}\n</code></pre> <p>For more information on individual tasks, see the tasks documentation.</p>"},{"location":"building/build-script/tasks/","title":"Build Script tasks","text":"<p>Stub</p> <p>This page is a stub. You can help by expanding it.</p> How can I help? <p>You can help by updating this page with examples.</p> <p>This is a list of all the tasks automatically included in our build script.</p>"},{"location":"building/build-script/tasks/#tasks","title":"Tasks","text":""},{"location":"building/build-script/tasks/#merge","title":"merge","text":"DescriptionExample <p>The <code>merge</code> task combines multiple subtitle files into a single ASS file. It's used to merge the main dialogue file with other components like OP/ED, extras, inserts, and typesetting.</p> <p>Key features: - Includes the main dialogue file - Optionally includes OP/ED files with sync line matching - Includes extra files if present - Sets script info like title, border/shadow scaling, and layout resolution</p> <pre><code>// Example code for merge task\n</code></pre>"},{"location":"building/build-script/tasks/#cleanmerge","title":"cleanmerge","text":"DescriptionExample <p>The <code>cleanmerge</code> task processes the merged subtitle file to remove unnecessary lines: - Removes blank lines - (Optionally) Removes karaoke template lines</p> <pre><code>// Example code for cleanmerge task\n</code></pre>"},{"location":"building/build-script/tasks/#chapters","title":"chapters","text":"DescriptionExample <p>Generates chapter markers from the dialogue file: - Uses \"chapter\" as the chapter marker - Creates a chapters file for muxing</p> <pre><code>// Example code for chapters task\n</code></pre>"},{"location":"building/build-script/tasks/#swap","title":"swap","text":"DescriptionExample <p>Applies text swapping for honorifics and other predefined replacements: - Operates on specified styles (e.g., \"Main\", \"Default\", \"Alt\") - Creates an alternative subtitle track with swapped text</p> <pre><code>// Example code for swap task\n</code></pre>"},{"location":"building/build-script/tasks/#mux","title":"mux","text":"DescriptionExample <p>The <code>mux</code> task combines video, audio, and subtitle files into a single MKV container: - Sets title and track metadata - Includes video and audio from the premux - Adds regular and honorific subtitle tracks - Attaches fonts and chapters - Applies compression to subtitle tracks - Skips unused fonts - Outputs the final muxed file</p> <pre><code>// Example code for mux task\n</code></pre>"},{"location":"building/build-script/tasks/#nc-tasks","title":"NC Tasks","text":"<p>For NCOP/NCED (creditless openings/endings):</p>"},{"location":"building/build-script/tasks/#merge_1","title":"merge","text":"DescriptionExample <ul> <li>Combines NC-specific subtitle files</li> </ul> <pre><code>// Example code for NC merge task\n</code></pre>"},{"location":"building/build-script/tasks/#cleanncmerge","title":"cleanncmerge","text":"DescriptionExample <ul> <li>Removes unnecessary lines from NC subtitles</li> </ul> <pre><code>// Example code for NC cleanncmerge task\n</code></pre>"},{"location":"building/build-script/tasks/#chapters_1","title":"chapters","text":"DescriptionExample <ul> <li>Generates NC-specific chapters</li> </ul> <pre><code>// Example code for NC chapters task\n</code></pre>"},{"location":"building/build-script/tasks/#mux_1","title":"mux","text":"DescriptionExample <ul> <li>Creates a separate muxed file for NC videos with appropriate metadata and attachments</li> </ul> <pre><code>// Example code for NC mux task\n</code></pre>"},{"location":"building/properties/","title":"Subtitle Properties","text":"<p>Stub</p> <p>This page is a stub. You can help by expanding it.</p> How can I help? <p>You can help by updating this page with examples, and better splitting up the sections.</p> <p>The <code>sub.properties</code> file is used to configure the build script. This file contains various settings that control how the subtitles are processed and how the final output is generated.</p>"},{"location":"building/properties/#basic-structure","title":"Basic Structure","text":"<p>The <code>sub.properties</code> file is structured as an INI-like configuration file, with key-value pairs separated by an equals sign (<code>=</code>). Comments can be added using the hash symbol (<code>#</code>).</p>"},{"location":"building/properties/#key-sections","title":"Key Sections","text":""},{"location":"building/properties/#release-information","title":"Release Information","text":"DescriptionExample <ul> <li>Basic Information: Details about the release group, show title, and shorthand names.</li> <li>Codec Information: Specifies video format, video codec, and audio codec.</li> <li>Track Names: Defines names for individual tracks (video, audio, subtitles).</li> </ul> <pre><code># Basic information\ngroup=Kaleido-subs\njp_title=Some random show\nshorthand=${jp_title}\nshorthand_pmx=${shorthand}\n\n# Codec information\nformat=BD 1080p\nvcodec=HEVC x265 10-bit\nacodec=Opus 2.0\ncodec_info=${format} ${vcodec} ${acodec}\n\n# Track names\nvtrack=x265\natrack=Opus 2.0 @ 192 kb/s\nstrack_reg=Full Subtitles [${group}]\nstrack_hono=Honorifics [${group}]\n</code></pre>"},{"location":"building/properties/#file-configuration","title":"File Configuration","text":"DescriptionExample <ul> <li>Output Files: Naming conventions for muxed files and creditless versions.</li> <li>Episode Configuration: Specifies episode range and chapter generation settings.</li> <li>Script Components: File paths for subtitle components (dialogue, typesetting, inserts, warnings).</li> </ul> <pre><code># Output files\ntitle=[${group}] ${jp_title} - ${tvdb} - (${codec_info})\nmuxdir=[${group}] ${jp_title} S${season} (${codec_info})\nmuxout=${muxdir}/$title [$mux.crc].mkv\nncmuxout=${muxdir}/Creditless/${muxout}\n\n# Episode configuration\nepisodes={01..24}\nchapters=${dialogue}\n\n# Script components\ndialogue=${episode}/${shorthand} ${episode} - Dialogue.ass\nextra=${episode}/${shorthand} ${episode} - Extra.ass\nTS=${episode}/${shorthand} ${episode} - TS*.ass\nINS=${episode}/${shorthand} ${episode} - INS*.ass\nnotes=${episode}/${shorthand} ${episode} - Notes.ass\nrender_warning=common/warning.ass\n</code></pre>"},{"location":"building/properties/#font-settings","title":"Font Settings","text":"DescriptionExample <ul> <li>Font Directories: Locations of episode-specific and common fonts.</li> </ul> <pre><code>fonts=${episode}/fonts\ncommon_fonts=common/fonts\n</code></pre>"},{"location":"building/properties/#oped-settings","title":"OP/ED Settings","text":"DescriptionExample <ul> <li>OP/ED Configuration: Configures opening and ending credit sequences, including episode usage and font locations.</li> <li>Creditless Videos: Settings for NCOPs/NCEDs (creditless openings and endings).</li> </ul> <pre><code>OP1=${OP1}/${shorthand} - OP1.ass\nED1=${ED1}/${shorthand} - ED1.ass\n\nNCOP1=${OP1}/${shorthand} - NCOP1 (Premux).mkv\nNCED1=${ED1}/${shorthand} - NCED1 (Premux).mkv\n</code></pre>"},{"location":"building/properties/#episode-metadata","title":"Episode Metadata","text":"DescriptionExample <ul> <li>Episode Numbering: Configures numbering scheme to match TVDB, including special episodes and absolute numbers.</li> </ul> <pre><code>tvdb=S${season}E${episode}\nepabs=${episode}\n</code></pre>"},{"location":"building/properties/#example-configuration","title":"Example Configuration","text":"<p>Below is an example of a typical <code>sub.properties</code> file:</p> <p>Default subtitle properties file</p> <pre><code># Basic information.\n### TODO: fill this in\ngroup=Kaleido-subs                                  # Name of the release group\njp_title=                                           # Japanese title of the show (to be filled in)\nshorthand=${jp_title}                               # Shorthand name, using the Japanese title\nshorthand_pmx=${shorthand}                          # Shorthand name for premux files\n\n\n# Codec info\nformat=BD 1080p                                     # Video format (Blu-ray, 1080p resolution)\nvcodec=HEVC x265 10-bit                             # Video codec (HEVC x265 with 10-bit color depth)\nacodec=Opus 2.0                                     # Audio codec (Opus 2.0 channel)\ncodec_info=${format} ${vcodec} ${acodec}            # Combined codec information string\n\n\n# Specific names for individual tracks. Should match codec info.\nvtrack=x265                                         # Video track name\natrack=Opus 2.0 @ 192 kb/s                          # Audio track name with bitrate\nstrack_reg=Full Subtitles [${group}]                # Regular subtitle track name\nstrack_hono=Honorifics [${group}]                   # Honorifics subtitle track name\n\n\n# Show-related (output) files\ntitle=[${group}] ${jp_title} - ${tvdb} - (${codec_info})  # Title format for regular episodes\n{SP*}.title=[${group}] ${jp_title} - ${epabs} (${episode}) - ${tvdb} - (${format} ${vcodec} ${acodec})  # Title format for special episodes\npremux=${episode}/*(Premux)*.mkv                    # Path pattern for premux files\n\nmuxdir=[${group}] ${jp_title} (${codec_info})       # Directory name for muxed files\nmuxout=${muxdir}/$title [$mux.crc].mkv              # Output filename for muxed files\nncmuxout=${muxdir}/Creditless/${muxout}             # Output filename for creditless (NC) muxed files\n\n\n# Episodes and other basic features.\nepisodes={01..24}|SP{1..2}                          # Episode range, including specials\nchapters=${dialogue}                                # Generate chapters from dialogue file\n\n\n# Individual script components\ndialogue=${episode}/${shorthand} ${episode} - Dialogue.ass  # Path for dialogue subtitle file\nextra=${episode}/${shorthand} ${episode} - Extra.ass        # Path for extra subtitle file\nTS=${episode}/${shorthand} ${episode} - TS*.ass             # Path pattern for typesetting files\nINS=${episode}/${shorthand} ${episode} - INS*.ass           # Path pattern for insert files\nrender_warning=common/warning.ass                           # Path for rendering warning file\n\n\n## Per-episode fonts, e.g. typesetting\nfonts=${episode}/fonts                              # Directory for episode-specific fonts\n## Common fonts, e.g. dialogue and titles\ncommon_fonts=common/fonts                           # Directory for common fonts used across episodes\n\n\n# OP/ED scripts and episode numbers\n## Common OP/EDs\n{02..12}.OP_name=NCOP1                              # Opening 1 used in episodes 2-12\n{13..24}.OP_name=NCOP2                              # Opening 2 used in episodes 13-24\n{01..12}.ED_name=NCED1                              # Ending 1 used in episodes 1-12\n{13..24}.ED_name=NCED2                              # Ending 2 used in episodes 13-24\n\nOP=${OP_name}/${shorthand} ${OP_name}.ass           # Path for opening subtitle file\nED=${ED_name}/${shorthand} ${ED_name}.ass           # Path for ending subtitle file\n\n## Fonts\nopfonts=${OP_name}/fonts                            # Directory for opening-specific fonts\nedfonts=${ED_name}/fonts                            # Directory for ending-specific fonts\n\n\n# Creditless\nncs=NCOP{1..2}|NCED{1..2}                           # Creditless opening and ending patterns\n\nncsubs=${episode}/${shorthand}_${episode}.ass       # Path for creditless subtitle file\nncpremux=${episode}/${shorthand}_${episode} (Premux).mkv  # Path for creditless premux file\nncfonts=${episode}/fonts                            # Directory for creditless-specific fonts\n\n\n## Episode numbers following TVDB.\n### Moved to the bottom because it's very spammy.\ntvdb=S${season}E${epnum}                            # TVDB episode numbering format\n\nseason=01                                           # Default season number\nepnum=${episode}                                    # Episode number (same as episode variable)\n\n### S00 episodes.\n{SP*}.season=00                                     # Set season to 00 for all special episodes\nSP1.epnum=01                                        # Episode number for Special 1\nSP2.epnum=02                                        # Episode number for Special 2\nSP3.epnum=03                                        # Episode number for Special 3\n\n### S00 absolute-ish episode number, used for easier user readability.\nSP1.epabs=07.5                                      # Absolute episode number for Special 1\nSP2.epabs=12.5                                      # Absolute episode number for Special 2\nSP3.epabs=25                                        # Absolute episode number for Special 3\n</code></pre>"},{"location":"building/structure/","title":"Project structure","text":"<p>By default, it assumes the following directory structure:</p> <p>Project Directory</p> <pre><code>Project Directory                                       # Root directory of the project\n\u251c\u2500\u2500 01                                                  # Directory for episode 1\n\u2502   \u251c\u2500\u2500 NewShow - S01E01 (Premux) [ABCD1234].mkv        # Raw video file for episode 1\n\u2502   \u251c\u2500\u2500 NewShow 01 - Dialogue.ass                       # Main dialogue subtitle file for episode 1\n\u2502   \u251c\u2500\u2500 NewShow 01 - OP.ass                             # Opening song subtitle file for episode 1\n\u2502   \u251c\u2500\u2500 NewShow 01 - TS (Actor 1).ass                   # Typesetting subtitle file for Actor 1 in episode 1\n\u2502   \u251c\u2500\u2500 NewShow 01 - TS (Actor 2).ass                   # Typesetting subtitle file for Actor 2 in episode 1\n\u2502   \u251c\u2500\u2500 NewShow 01 - TS (Actor 3).ass                   # Typesetting subtitle file for Actor 3 in episode 1\n\u2502   \u2514\u2500\u2500 fonts                                           # Directory for episode-specific fonts\n\u2502       \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 02                                                  # Directory for episode 2\n\u2502   \u251c\u2500\u2500 NewShow - S01E02 (Premux) [ABCD1234].mkv        # Raw video file for episode 2\n\u2502   \u251c\u2500\u2500 NewShow 02 - Dialogue.ass                       # Main dialogue subtitle file for episode 2\n\u2502   \u251c\u2500\u2500 NewShow 02 - TS.ass                             # Typesetting subtitle file for episode 2\n\u2502   \u2514\u2500\u2500 fonts                                           # Directory for episode-specific fonts\n\u2502       \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 ED1                                                 # Directory for ending 1\n\u2502   \u251c\u2500\u2500 NewShow - ED1 (Premux) [ABCD1234].mkv           # Raw video file for ending 1\n\u2502   \u251c\u2500\u2500 NewShow - ED1.ass                               # Subtitle file for ending 1 (includes both lyrics and typesetting)\n\u2502   \u2514\u2500\u2500 fonts                                           # Directory for ending-specific fonts\n\u2502       \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 OP1                                                 # Directory for opening 1\n\u2502   \u251c\u2500\u2500 NewShow - OP1 (Premux) [ABCD1234].mkv           # Raw video file for opening 1\n\u2502   \u251c\u2500\u2500 NewShow - OP1.ass                               # Subtitle file for opening 1 (includes both lyrics and typesetting)\n\u2502   \u2514\u2500\u2500 fonts                                           # Directory for opening-specific fonts\n\u2502       \u2514\u2500\u2500 ...\n\u251c\u2500\u2500 common                                              # Directory for common files\n\u2502   \u251c\u2500\u2500 fonts                                           # Directory for fonts used across multiple episodes\n\u2502   \u2502   \u251c\u2500\u2500 LinotypeFinnegan Medium.ttf                 # Default dialogue font\n\u2502   \u2502   \u2514\u2500\u2500 LinotypeFinnegan MediumItalic.ttf           # Default dialogue font\n\u2502   \u2514\u2500\u2500 warning.ass                                     # Subtitle file containing a warning about rendering issues\n\u251c\u2500\u2500 gradle                                              # Directory for Gradle build tool files\n\u2502   \u2514\u2500\u2500 wrapper                                         # Gradle wrapper directory\n\u2502       \u251c\u2500\u2500 gradle-wrapper.jar                          # Gradle wrapper JAR file\n\u2502       \u2514\u2500\u2500 gradle-wrapper.properties                   # Gradle wrapper properties file\n\u251c\u2500\u2500 README.md                                           # Project README file\n\u251c\u2500\u2500 build.gradle.kts                                    # Gradle build script\n\u251c\u2500\u2500 gradle.properties                                   # Gradle properties file\n\u251c\u2500\u2500 gradlew                                             # Gradle wrapper script for Unix-like systems\n\u251c\u2500\u2500 gradlew.bat                                         # Gradle wrapper script for Windows\n\u251c\u2500\u2500 settings.gradle.kts                                 # Gradle settings file\n\u2514\u2500\u2500 sub.properties                                      # Subtitle properties file\n</code></pre> Example of a real project structure <pre><code>Blue-Archive\n|-- 01\n|   |-- Blue Archive The Animation - S01E01 (Premux) [A4B6D23B].mkv\n|   |-- BlueArchive 01 - Dialogue.ass\n|   |-- BlueArchive 01 - OP.ass\n|   |-- BlueArchive 01 - TS (Gry).ass\n|   |-- BlueArchive 01 - TS (Light).ass\n|   |-- BlueArchive 01 - TS (MSO).ass\n|   |-- BlueArchive 01 - TS (Period).ass\n|   |-- BlueArchive 01 - TS (petzku).ass\n|   `-- fonts\n|       |-- ...\n|-- 02\n|   |-- Blue Archive The Animation - S01E02 (Premux) [DCFED1AB].mkv\n|   |-- BlueArchive 02 - Dialogue.ass\n|   |-- BlueArchive 02 - TS (Light).ass\n|   |-- BlueArchive 02 - TS (MSO).ass\n|   `-- fonts\n|       |-- ...\n|-- 03\n|   |-- Blue Archive The Animation - S01E03 (Premux) [38000900].mkv\n|   |-- BlueArchive 03 - Dialogue.ass\n|   |-- BlueArchive 03 - TS (Light).ass\n|   `-- fonts\n|       |-- ...\n|-- 04\n|   |-- Blue Archive The Animation - S01E04 (Premux) [3AA19D61].mkv\n|   |-- BlueArchive 04 - Dialogue.ass\n|   |-- BlueArchive 04 - Extra.ass\n|   |-- BlueArchive 04 - TS (Light).ass\n|   |-- BlueArchive 04 - TS (petzku).ass\n|   `-- fonts\n|       |-- ...\n|-- 05\n|   |-- Blue Archive The Animation - S01E05 (Premux) [83434195].mkv\n|   |-- BlueArchive 05 - Dialogue.ass\n|   |-- BlueArchive 05 - TS (Light).ass\n|   `-- fonts\n|       |-- ...\n|-- 06\n|   |-- Blue Archive The Animation - S01E06 (Premux) [4F14C2AE].mkv\n|   |-- BlueArchive 06 - Dialogue.ass\n|   |-- BlueArchive 06 - Extra.ass\n|   |-- BlueArchive 06 - TS (Light).ass\n|   |-- BlueArchive 06 - TS (petzku).ass\n|   `-- fonts\n|       |-- ...\n|-- 07\n|   |-- Blue Archive The Animation - S01E07 (Premux) [3B0015AF].mkv\n|   |-- BlueArchive 07 - Dialogue.ass\n|   |-- BlueArchive 07 - TS (Light).ass\n|   `-- fonts\n|       |-- ...\n|-- 08\n|   |-- Blue Archive The Animation - S01E08 (Premux) [A5674D39].mkv\n|   |-- BlueArchive 08 - Dialogue.ass\n|   |-- BlueArchive 08 - TS (Light).ass\n|   |-- BlueArchive 08 - TS (petzku).ass\n|   `-- fonts\n|       |-- ...\n|-- 09\n|   |-- Blue Archive The Animation - S01E09 (Premux) [C6C9D1E0].mkv\n|   |-- BlueArchive 09 - Dialogue.ass\n|   |-- BlueArchive 09 - TS (Light).ass\n|   |-- Whiteboard.ass\n|   `-- fonts\n|       |-- ...\n|-- 10\n|   |-- Blue Archive The Animation - S01E10 (Premux) [C077087E].mkv\n|   |-- BlueArchive 10 - Dialogue.ass\n|   |-- BlueArchive 10 - TS (Light).ass\n|   `-- fonts\n|       |-- ...\n|-- 11\n|   |-- Blue Archive The Animation - S01E11 (Premux) [DC03E7BE].mkv\n|   |-- BlueArchive 11 - Dialogue.ass\n|   |-- BlueArchive 11 - TS (Light).ass\n|   `-- fonts\n|       |-- ...\n|-- 12\n|   |-- Blue Archive The Animation - S01E12 (Premux) [1ADD8F6D].mkv\n|   |-- BlueArchive 12 - Dialogue.ass\n|   |-- BlueArchive 12 - INS.ass\n|   |-- BlueArchive 12 - TS (Light).ass\n|   |-- BlueArchive 12 - TS (petzku).ass\n|   `-- fonts\n|       |-- ...\n|-- NCED1\n|   |-- Blue Archive The Animation - NCED1 (Premux) [8C8AD616].mkv\n|   |-- BlueArchive NCED1.ass\n|   `-- fonts\n|       |-- ...\n|-- NCOP1\n|   |-- Blue Archive The Animation - NCOP1 (Premux) [BE45148E].mkv\n|   |-- BlueArchive NCOP1.ass\n|   `-- fonts\n|       |-- ...\n|-- README.md\n|-- build.gradle.kts\n|-- common\n|   |-- fonts\n|   |   |-- LinotypeFinnegan Medium.ttf\n|   |   |-- LinotypeFinnegan MediumItalic.ttf\n|   |   `-- RoGSanSrfStd-UB.otf\n|   `-- warning.ass\n|-- gradle\n|   `-- wrapper\n|       |-- gradle-wrapper.jar\n|       `-- gradle-wrapper.properties\n|-- gradle.properties\n|-- gradlew\n|-- gradlew.bat\n|-- settings.gradle.kts\n`-- sub.properties\n</code></pre>"},{"location":"group/distribution/","title":"Distribution","text":"<p>Stub</p> <p>This page is a stub. You can help by expanding it.</p> How can I help? <p>Whip me into writing this page.</p>"},{"location":"group/roles/","title":"Group Roles","text":"<p>Subtitling groups are often made up of multiple people, and each member has a specific role.</p> <p>This document outlines the most common roles and their responsibilities. This is done on a per-project basis, and the roles may be shared or rotated between members, or a single person may take on multiple roles.</p> <p>Everyone on the team should be trusted to do their job to the best of their ability, and be given enough leeway to do so. If you can't trust someone to do their job to a satisfactory degree, then they shouldn't be on the team in the first place.</p>"},{"location":"group/roles/#project-leader","title":"Project Leader","text":"<p>One of the primary responsibilities of the project leader is to set up the necessary infrastructure. This ranges from preparing a logical folder structure, to setting up version control, and coordinating file sharing so members can access the files they need.</p> <p>Beyond the technical setup, the project leader is also responsible for project management. They gather the staff and assign roles, and track and update the progress of the project. If the project is starting to drag, they are responsible for taking appropriate action, such as assigning new staff or replacing existing ones, and in some cases stepping up to the plate themselves to help get the project back on track.</p> <p>The project leader is often also the person checking the final release candidate to ensure everything looks good and remaining errors are dealt with, as well as the person releasing the finished project.</p> <p>In a subtitling project, the project leader gets the final say on most matters. If the translator and editor have differing opinions and can't come to an agreement, the project leader is the one who gets to call the final shot.</p>"},{"location":"group/roles/#translator","title":"Translator","text":"<p>The translator is responsible for translating the script, as well as signage. How much control they have over the final product varies by group, but they are a vital component of the team whose opinion should be respected.</p> <p>The base script has a profound impact on the final quality, so it's paramount that the translator has a firm grasp of both the source language and the target language. In case they struggle to convey the intended meaning or are afraid their translation may be misunderstood, they leave comments for the editor to work with.</p> <p>Ideally, the translator should understand the source material well enough to be able to make informed decisions on how to best translate certain elements of the script. This is especially important for things such as terminology.</p> <p>Optional Role</p> <p>This role is technically optional,  as there are translations available for most modern titles.  However, as mentioned previously,  the base translation heavily influences the final quality,  so it's almost always best to have a translator in the team.</p>"},{"location":"group/roles/#editor","title":"Editor","text":"<p>The editor is responsible for how the final script reads. Their job is to ensure the translation reads well and flows naturally, while also fixing any mistakes the translator made (or discussing alternative translations with them).</p> <p>They are expected to have a good understanding of grammar and syntax, as well as the ability to recognize when something doesn't sound quite right. They get to draw the line on how adaptive the translation should be. Ideally, they are brave enough to make changes to better capture the nuance of the source text, even if it means rewriting large portions of the script.</p> <p>The editor is also responsible for making sure the text is formatted correctly, and is easily readable for viewers. This includes things like line breaks, slimming down lines if they are too long, and splitting and joining lines as necessary.</p> <p>In Kaleido, the editor is king. They get to decide the direction of the script, and typically can only be overruled by the project leader. The tough choices fall on them, and they are the ones who should address script comments made by the QC. However, they should still make an effort to discuss changes with the translator, and take their suggestions into consideration.</p> <p>No matter how good the translator is, they almost always benefit from having an editor look over their work.</p>"},{"location":"group/roles/#translation-checker","title":"Translation Checker","text":"<p>The translation checker is responsible for ensuring the translation is accurate. They typically work after the editor has made their changes, and they check whether the translation captures the correct nuances.</p> <p>Translation checkers can often be viewed as editors who know the source language, without being burdened by the need to make changes to the script. This allows them to focus more on the greater picture, which the editor may miss if they become too caught up on individual lines.</p> <p>Optional Role</p> <p>This role is technically optional,  and is sometimes filled by the original translator.  With a sufficiently experienced translator-editor pair,  there isn't always a need for a separate translation checker.  However, it's still a good idea to have an additional pair of eyes to catch anything the editor might have missed.</p>"},{"location":"group/roles/#timer","title":"Timer","text":"<p>The timer is responsible for timing the translation. For original translations, they are often the first person to get to work. If there is already a timed script available, they may perform a timing pass at a later date, but ideally still before editing, as the timing can influence how the editor may handle certain lines.</p> <p>The timer may also be responsible for karaoke timing if the song styler wants to include that.</p>"},{"location":"group/roles/#encoder","title":"Encoder","text":"<p>The encoder is responsible for the video quality of the final release. They should ensure the best video sources are used, and that they are filtered to remove artefacting if possible.</p> <p>They get to call the final shot on all aspects of the video, and should strive to improve upon the source video and make an encode that beats out other options, even at the cost of increased file sizes.</p> <p>They, along with the project leader, may also decide whether they want to include additional files, such as specials or dubbed audio.</p>"},{"location":"group/roles/#typesetters","title":"Typesetter(s)","text":"<p>The typesetter is responsible for setting translations for the signage of the show. This is among the most technically challenging roles, and often the task that takes the longest to complete.</p> <p>They should ensure that the typeset text is readable, performant, and looks (relatively) consistent across episodes.</p> <p>Typesetters must be familiar with the common tools of the trade, and be able to work relatively quickly. They get to decide how complex the typesetting should be, how similar it should be to the original signage, and how much time should be spent on it.</p> <p>Difficult Role</p> <p>Typesetting is not an easy task,  and should not be underestimated.  It takes a lot of skill and diligence to do it well,  and it's not a job you learn overnight,  especially with how quickly tools are written and updated,  or how quickly new techniques and best practices are developed.</p>"},{"location":"group/roles/#song-styler","title":"Song Styler","text":"<p>The person responsible for styling the songs. They make sure the lyrics fit with the song's style or visual's aesthetic, and that they are styled in a way that is pleasing to the eye while remaining readable. They get to decide how the lyrics should be styled, including whether karaoke should be included.</p> <p>This role is often picked up by another member of the team, but there can also be a or multiple dedicated song stylists. If none are found, the project leader or typesetter may create some simple song styling.</p>"},{"location":"group/roles/#quality-controlassurance","title":"Quality Control/Assurance","text":"<p>The QC is responsible for ensuring the final product meets a baseline level of quality. This is a multi-faceted role, and possibly the most difficult to take on. The QC is expected to be familiar with the tools and software used, and have a good grasp of the principles of subtitling. They are also expected to be familiar with common techniques used by all roles of the team, as well as to make up for any shortcomings during their pass.</p> <p>The QC is not one who gets to make direct changes to the script, short of simple things like correcting typos or fixing inconsistencies. They should leave notes on things that need to be fixed, and if possible offer suggestions on things the script can be improved on.</p> <p>Difficult Role</p> <p>Quality Control is not a trivial role,  and should not be an afterthought.  They should be experienced enough to catch mistakes that others may miss,  and this role should not be left in the hands of newbies.</p> <p>In Kaleido, the QC often creates a pull request with notes and suggestions. The project leader ensures that all notes are addressed by the appropriate members, and once the QC is satisfied, they approve the pull request.</p>"},{"location":"group/roles/#other-roles","title":"Other roles","text":"<p>There may be other, highly specialised roles in a group that are not listed here. These are often advisors who provide advice on specific aspects of the project. Examples include git masters, translators who have worked on the source material and can give feedback and advice, and so on.</p> <p>These may also be dedicated song translators and editors. Writing songs is a very specialised skill, and one that not many translators and editors possess, so it's not uncommon to outsource these roles to specialists.</p>"},{"location":"guidelines/editing/","title":"Editing Guidelines","text":"<p>Stub</p> <p>This page is a stub. You can help by expanding it.</p> How can I help? <p>You can help by expanding upon examples given in this document. Examples should ideally be real-life examples from real releases.</p> <p>Editing Bible</p> <p>This document is not the Bible, regardless of how authoritative it may sound in some sections. Editing is a creative process, and there are infinitely many schools of thought on how to best adapt a script. This document is simply a style guide to help maintain a somewhat consistent style to Kaleido releases.</p> <p>Target Language</p> <p>This document is written for an English-speaking audience. If you are not editing in English, a lot of the practices here may not apply to you. Always make sure to refer to widely-accepted style guides in the language you are editing in.</p> <p>Editing plays a crucial role in fansubbing, helping to make the original text more accessible and ensuring the intended message is effectively conveyed. This process can involve various changes, such as adapting cultural references, rewriting jokes, or making the dialogue flow more naturally. There are many different opinions on what makes for good editing, and many different editing styles to choose from.</p> <p>This document is a style guide most Kaleido projects follow, and is intended to provide a consistent style and quality of editing to the group's releases. Deviations from these guidelines are often intentional, and may help give more character to a subtitle or fit the style of the original script better.</p> <p>How close to this style guide scripts follow depends on the script and the editor in charge of the project, but the majority of Kaleido releases should more or less follow this style guide.</p>"},{"location":"guidelines/editing/#grammar-and-punctuation","title":"Grammar and Punctuation","text":"<p>Using proper grammar and punctuation is crucial for creating clear and engaging subtitles. But there are also some other things to keep in mind, such as the dialect of English to use. In the subtitling community, American English is the standard, but some groups such as Kaleido use British English for its subtitles.</p> <p>Consistency</p> <p>British English is more flexible in which spellings you can use, as it's not uncommon for both spellings to be commonly accepted. However, you should strive to keep your spelling consistent throughout the project.</p> <p>Below is a quick overview of some common differences between British and American English.</p> <p>Differences between British and American English</p> -ise/-izeou/o-re/-erll/l-ce/-seOther words <p>Spelling differences</p> <p>British English spellings often end in \"-ise\", while American English uses \"-ize\": The spelling \"-ize\" is also often accepted in British English, but required in American English.</p> British English American English Fantasise Fantasize Apologise Apologize Recognise Recognize Realise, Realisation Realize, Realization Organise, Organisation Organize, Organization Customise, Customisation Customize, Customization <p>Spelling differences</p> <p>British English often uses \"ou\" where American English uses \"o\":</p> British English American English Colour Color Favourite Favorite Rumour Rumor Neighbour Neighbor Labour Labor <p>Spelling differences</p> <p>British English often ends words with \"-re\" while American English uses \"-er\":</p> British English American English Centre Center Theatre Theater<sup>1</sup> Metre Meter Calibre Caliber Fibre Fiber Litre Liter <p>Spelling differences</p> <p>British English often doubles the \"l\" where American English uses a single \"l\":</p> British English American English Travelling Traveling Fuelling Fueling Cancelled Canceled Marvelling Marveling Signalling Signaling Labelling Labeling <p>Spelling differences</p> <p>British English often uses \"-ce\" where American English uses \"-se\":</p> British English American English Defence Defense Offence Offense Licence License Pretence Pretense Practise (verb), Practice (noun) Practice (both verb and noun) Advice (noun), Advise (verb) Advice (noun), Advise (verb) British English American English Enrol Enroll Programme (TV and radio), Program (computer) Program (all uses) Jewellery Jewelry Plough Plow Aluminium Aluminum Draught Draft Tyre Tire Sceptical Skeptical Ageing Aging Cosy Cozy Maths Math Lorry Truck Lift Elevator <p>Besides dialect differences, there are a couple other \"rules\" Kaleido follows:</p> <p>Other rules</p> All right/AlrightOK/Okay <p>\"Alright\" is almost always spelled as \"all right\".</p> <p>This is the accepted spelling in published writing,  and is also the spelling we stick to.  While cases can be made for \"alright\",  it is always safer to use our preferred spelling.</p> <p>How closely the editor sticks to this rule  is up to their discretion,  and there's nothing essentially wrong with using \"alright\",  so long as it's not used as a blank stand-in.</p> <p>\"OK\" and \"Ok\" should almost always be fully spelled out as \"okay\".</p> <p>This is strictly for aesthetic reasons,  and ultimately they mean the same thing.  If there's an \"OK\" signage on screen,  it may be appropriate to keep the abbreviation in dialogue as well,  but in almost any other case,  \"okay\" is preferred.</p>"},{"location":"guidelines/editing/#punctuation","title":"Punctuation","text":"<p>Proper use of punctuation is almost always required. Do not rely on punctuation used in the original Japanese script, as punctuation rules and styles vary greatly between languages.</p> <p>Punctuation rules</p> Comma splicesOxford commaAbrupt endsEllipses spamJapanese punctuation <p>Avoid comma splices. This is when multiple independent clauses are joined together with commas without any other punctuation to separate them. These often result in run-on sentences, which can be more difficult to read.</p> <p>Incorrect</p> <p>\"I love editing, it's my favorite hobby.\"</p> <p>Instead, use appropriate punctuation or conjunctions:</p> <p>Correct</p> <ul> <li>\"I love editing. It's my favorite hobby.\"</li> <li>\"I love editing, and it's my favorite hobby.\"</li> </ul> <p>The Oxford comma is highly preferred. This will typically reduce ambiguity, but not always.</p> <p>If you are unsure if an Oxford comma will help, it may be indicative that a line should be rewritten.</p> Adding clarityPreventing misunderstandingWhen to rewriteSimplifying complex lists <p>Incorrect</p> <p>\"I dedicate this book to my parents, Ayn Rand and God.\"</p> <p>Correct</p> <p>\"I dedicate this book to my parents, Ayn Rand, and God.\"</p> <p>The Oxford comma clarifies that \"parents\", \"Ayn Rand\", and \"God\" are separate entities.</p> <p>Incorrect</p> <p>\"We invited the strippers, JFK and Stalin.\"</p> <p>Correct</p> <p>\"We invited the strippers, JFK, and Stalin.\"</p> <p>The Oxford comma makes it clear that JFK and Stalin are not the strippers.</p> <p>Sometimes, even with an Oxford comma, a sentence can be ambiguous:</p> <p>Ambiguous Sentence</p> <p>\"I saw the elephant, my sister, and her husband at the zoo.\"</p> <p>This could be read in two ways:</p> <ul> <li>That you saw the elephant, your sister, and her husband at the zoo.</li> <li>That your sister is an elephant, and you saw her with her husband.</li> </ul> <p>In such cases, it's better to rewrite the line to remove the ambiguity.</p> <p>Rewritten</p> <p>\"At the zoo, I saw an elephant. I also met my sister and her husband there.\"</p> <p>Consider this sentence with an Oxford comma:</p> <p>Example Sentence</p> <p>\"The menu includes fish and chips, macaroni and cheese, and peanut butter and jelly.\"</p> <p>While technically correct, this can be hard to read. Instead, consider rewriting the line so it's easier to understand:</p> <p>Rewritten</p> <ul> <li>\"The menu includes three items: fish and chips, macaroni and cheese, and peanut butter and jelly.\"</li> <li>\"The menu offers three classic pairings: fish with chips, macaroni with cheese, and peanut butter with jelly.\"</li> </ul> <p>Use em dashes (\u2014) for interruptions or abrupt changes in thought, not hyphens (-) or double hyphens (--).</p> <p>Incorrect</p> <p>\"I'm sorry, I'm sorry, I'm s--\"</p> <p>Correct</p> <p>\"I'm sorry, I'm sorry, I'm s\u2014\"</p> <p>In the case of trailing off, ellipses (...) may be used. However, also consider whether a full stop (.) would be more appropriate.</p> <p>Correct</p> <ul> <li>\"I don't know...\"</li> <li>\"I don't know.\"</li> </ul> <p>Avoid ellipses like the plague.</p> <p>Permit me to be so brazen as to break character and put my full hatred on display here (we will continue with regular programming shortly), but ellipses are almost always unnecessary, annoying to read, and can usually be replaced with different punctuation.</p> <p>Spamming them every time the character has even a slight pause is not only annoying, but may also give the viewer the wrong impression about the character and the conviction put into the line, and in the worst cases feels like you're positioning a speed bump in front of the viewer while they're trying to read.</p> <p>The ellipsis has been abused by many scripts, especially in the 2000s. Thankfully, many editors have started to catch on to this, and it is becoming less common.</p> <p>Do not take this to mean that you should never use ellipses. They can be fantastic tools if used sparingly to convey doubt or uncertainty, or a character's trailing train of thought. However, not every pause merits an ellipsis, and they should absolutely not be placed at the start and end of every single incomplete line (looking at you, [a.f.k.])</p> <p>Bad use of ellipses (thanks, [a.f.k.])</p> <p></p> <p>Always consider whether a full stop or even a comma would be more appropriate, or if a line even needs punctuation at all (such as with broken lines that continue immediately after, as is the case with almost every single line in the above example). Sometimes a line can be rewritten to convey the intended meaning more clearly without forcefully inserting an ellipsis.</p> <p>Naturally, in places where ellipses are required (such as when a character continues another character's line), they are completely fine to use.</p> <p>Good use of ellipses</p> <p></p> <p>Also, never use the four-dotted ellipsis.</p> <p>It's not uncommon for Japanese punctuation to slip into English scripts by accident, especially in the past. You should stay on the lookout for these, and replace them with appropriate English punctuation where necessary. Similarly, you should try to avoid being beholden to the original punctuation, as the rules differ between English and Japanese.</p> <p>Examples of this include:</p> <ul> <li>Banginterros (!?)</li> </ul> <p>In English, it's standard to use interrobangs (?!) to convey surprise and shock, whereas in Japanese banginterros (!?) are used instead. While banginterros are occasionally found in English, they are less standardised.</p> <ul> <li>Wavy Dashes (~)</li> </ul> <p>In Japanese, the wavy dash (~) is often used to indicate a prolonged sound (like \"Aah~\"). This is not used in English, and should be avoided.</p> <ul> <li>Long dashes (\u2015\u2015\u2015\u2015\u2015\u2015)</li> </ul> <p>These serve a similar purposes to em dashes, but can become rather extreme in use (admittedly, these are more often found in visual novels than subtitles). These should be replaced with appropriate punctuation, which depends on the context they are used in.</p> <ul> <li>Quote brackets (\u300c \u300d)</li> </ul> <p>While these brackets look cool, they are not used in English. These signify quotes in Japanese, and should be replaced with appropriate quotation marks.</p>"},{"location":"guidelines/editing/#quotation-marks","title":"Quotation Marks","text":"<p>The use of quotation marks varies between British and American English,</p> <p>Differences between British and American English</p> Shared rulesBritish EnglishAmerican English <p>The rules between British and American English are very similar. The following rule is shared by both:</p> <ul> <li>Double quotation marks are used when quoting, and single marks are used when quoting within quotes.</li> </ul> <p>Incorrect</p> <p>The note said, \"Exactly how long is \"a few hours\"?\"</p> <p>Correct</p> <p>The note said, \"Exactly how long is 'a few hours'?\"</p> <ul> <li>Exclamation and question marks are placed inside the quotation marks if they are part of the quoted material, otherwise they are placed outside.</li> </ul> <p>Incorrect</p> <p>I believe I heard her say \"Are we there yet\"?</p> <p>Correct</p> <p>I believe I heard her say \"Are we there yet?\"</p> <ul> <li>If the punctuation is part of the quoted material, it goes inside the quotation marks. If not, it goes outside.</li> </ul> <p>Incorrect</p> <p>She said, \"I expect you to be home by midnight.\"</p> <p>Correct</p> <p>She said, \"I expect you to be home by midnight\".</p> <ul> <li>Periods and commas are always placed inside the quotation marks, even if they are not part of the original quoted material.</li> </ul> <p>Incorrect</p> <p>When I asked him if he wanted another piece of cake, he replied, \"Yes\".</p> <p>Correct</p> <p>When I asked him if he wanted another piece of cake, he replied, \"Yes.\"</p>"},{"location":"guidelines/editing/#sentence-structure","title":"Sentence structure","text":"<p>Dialogue flow is one of the things Kaleido editors focus on most. Subtitles are timed to fit the dialogue, and as such, it's important to make it as easy as possible for the viewer to understand in a short amount of time while flowing naturally.</p> <p>Sentence Structure</p> SplittingConcisenessClarityJapaneseismsRun-on sentences <p>Sentences should be broken up into smaller clauses where reasonable and natural.</p> <p>Long and complex</p> <p>\"The ancient castle, which had stood for centuries on the hilltop overlooking the village, was finally being restored to its former glory after years of neglect and decay.\"</p> <p>Split into smaller clauses</p> <p>\"The ancient castle stood on the hilltop overlooking the village. It had been there for centuries. After years of neglect and decay, it was finally being restored to its former glory.\"</p> <p>Splitting clauses makes it easier for viewer to process individual pieces of information.</p> <p>Aim for concise sentences that convey information efficiently. This is especially important with subtitles, as viewers have limited time to read each line.</p> <p>Wordy</p> <p>\"Due to the fact that it was raining heavily, we decided to cancel our plans for a picnic in the park.\"</p> <p>Concise</p> <p>\"We cancelled our picnic because of the heavy rain.\"</p> <p>Sentences can be wordier if the CPS is low, as there's more time for the viewer to read each line. Lines may also be extended sometimes, as it's a bit confusing to have a single, short line that takes up a lot of screen time. This gives the viewer the wrong impression that a lot of information is being cut.</p> <p>Ambiguity should be avoided, unless the original script calls for it. If it's unclear what the intended meaning is, it may require some rewriting to make it clearer, even if it means inventing new information.</p> <p>Ambiguous</p> <p>\"She saw the man with the telescope.\"</p> <p>Clear</p> <ul> <li>\"She peeked through her telescope, and saw the man.\"</li> <li>\"She saw the man holding tightly to his telescope.\"</li> </ul> <p>These are common \"Japaneseisms\", or patterns common in Japanese-to-English translations, that should be avoided.</p> Rearranging informationSet phrases or grammarAwkward repetitionExplicitnessNames <p>English and Japanese have different grammatical structures, which often requires rearranging information within a sentence for natural-sounding English.</p> <p>Prioritizing the viewer's comprehension is key, even if it means sacrificing minor details from the original.</p> <p>Incorrect</p> <p>\"Damn, being that bulletproof and with a blade that sharp, what do we do?\"</p> <p>Correct</p> <p>\"What can we even do against someone that's bulletproof and has a blade that sharp?\"</p> <p>Japanese often uses set phrases or grammatical structures that sound unnatural when directly translated. These should be rewritten to capture the intended meaning while sounding more natural to an English audience.</p> <p>Naturally, how you rewrite these depends entirely on the original line, the character speaking, and the context they are speaking in.</p> <p>Incorrect</p> <p>\"What's with your expression? An expression resembling a main protagonist filled with courage.\"</p> <p>Correct</p> <p>\"The heck? Why are you looking at me like some hero ready to take on the final boss?\"</p> <p>In some cases, equivalent English set phrases may exist for the given context. A common example of this is \"Somebody!\" vs. \"Help me!\".</p> <p>Avoid awkward repetition whenever possible. This is common in Japanese, but not in English.</p> <p>Incorrect</p> <p>\"Yeah, all right, all right.\"</p> <p>Correct</p> <p>\"Yeah, whatever.\"</p> <p>Incorrect</p> <p>\"I'm kidding, I'm kidding! Have a look, have a look!\"</p> <p>Correct</p> <p>\"I'm kidding. Have a look!\"</p> <p>Japanese often relies on vague or implied context, while English favours concreteness and explicitness. When editing, you should strive to make the intended meaning as clear as possible, even if it means adding additional information, or in rare cases even omitting some.</p> Implied subject/pronounsAmbiguousPassive voiceOverly polite <p>Japanese often omits the subjects or pronouns, assuming the reader will understand from context. In English, it's confusing if the subject is omitted, so it should be added in the translation.</p> <p>Japanese sentences can sometimes leave certain elements like the time or actor implicit, and depends a lot more on context than English. In English, these elements should be made more explicit if possible to avoid confusion.</p> <p>Incorrect</p> <p>\"He's going to his brother's house to meet his wife.\"</p> <p>Correct</p> <p>\"He's going to his brother's house to meet his brother's wife.\"</p> <p>Incorrect</p> <p>\"The document was delivered, and now it's being reviewed.\"</p> <p>Correct</p> <p>\"The team delivered the document, and now the manager is reviewing it.\"</p> <p>Japanese often uses passive constructions, whereas English favours active voice. Keeping lines in passive voice can sound unnatural or vague, and sometimes even stilted.</p> <p>Incorrect</p> <p>\"It is said that the castle was built by the king.\"</p> <p>Correct</p> <p>\"People say the king built the castle.\"</p> <p>Japanese often uses polite or indirect expressions, especially when asking questions or making suggestions. In English however, direct communication is preferred, and indirectness can sound awkward or overly formal.</p> <p>Incorrect</p> <p>\"Would it be okay if I asked you to help with this?\"</p> <p>Correct</p> <p>\"Could you help me with this?\"</p> Direct addressRepeated useRole termsName order <p>It's common for Japanese to use a character's name in dialogue when referring to them in the third person, even when that character is the person being spoken to. This sounds unnatural in English, where we typically use pronouns like \"you\" instead.</p> <p>Stub</p> <p>This page is a stub. You can help by expanding it.</p> How can I help? <p>Help me find the perfect example for this page. I have some on the tip of my tongue, but I can't quite place them.</p> <p>Using a character's name repeatedly, especially in conversations where it's obvious who's being addressed, can feel overly formal or unnatural.</p> <p>In Japanese, a person's role or relationship is often used in place of their name, such as \"Onii-chan\" for an elder brother, and \"Sensei\" for a teacher. This isn't anywhere near as common in English, and should be used sparingly if possible.</p> <p>Older brother</p> <p>In English, we don't have a specific term for an elder brother, and when a character is talking about their brother, having no adjective implies they are older, whereas \"little\" or \"younger\" more explicit signals they are younger.</p> <p>The Japanese name order is Surname-First Name, whereas in English it's First Name-Surname.</p> <p>There are many opinions on how to handle this, but Kaleido follows the spoken order.</p> <p>Try to avoid run-on sentences, as they are difficult to read and understand. If a sentence is too long, try to break it up into two shorter sentences.</p> <p>Incorrect</p> <p>\"The sun was setting, the birds were chirping, the flowers were blooming, it was a perfect spring evening.\"</p> <p>Correct</p> <p>\"The sun was setting, birds were chirping, and flowers were blooming. It was a perfect spring evening.\"</p> <p>Exceptions may apply, such as when a character is speaking very quickly, or otherwise stumbling over their words.</p> <p>Correct</p> <p>\"Oh god, I was literally just with him, and before I knew it he said something like, 'I'm doing it' and I was like, 'Do what?' and then he jumped off the bridge!\"</p>"},{"location":"guidelines/editing/#garden-pathing","title":"Garden-pathing","text":"<p>Garden-pathing is when a sentence is easy to misinterpret when parsed sequentially, and requires you to circle back to an earlier part of the sentence to understand it. This is a common mistake made by English learners, and should be avoided.</p> <p>Below are a few examples of garden-pathing, and how you may go about rewriting them<sup>2</sup>.</p> <p>Garden-pathing</p> Example AExample BExample C <p>Example Sentence</p> <p>\"The horse raced past the barn fell.\"</p> <p>Explanation</p> <p>The reader initially assumes the horse is \"racing past the barn\", but the sentence actually means that the horse was raced past the barn, and then it fell.</p> <p>Rewritten</p> <p>\"The horse that was raced past the barn fell.\"</p> <p>Explanation</p> <p>Adding \"that was\" clarifies the relationship between the horse and the action of falling.</p> <p>Example Sentence</p> <p>\"The man who hunts ducks out on weekends.\"</p> <p>Explanation</p> <p>The reader initially assumes the sentence means that the old man \"hunts ducks (the birds) out on weekends\", but \"ducks out\" is actually the verb \"to duck out\" (i.e. leave or avoid something).</p> <p>Rewritten</p> <p>\"The man who hunts hides out on weekends.\"</p> <p>Explanation</p> <p>Changing the verb to \"hides\" makes it clear that the old man is trying to avoid something while avoiding the misunderstanding that he's hunting a specific animal on weekends.</p> <p>Example Sentence</p> <p>\"The prime number few.\"</p> <p>Explanation</p> <p>The reader initially assumes that \"the prime number\" is the subject of the sentence, as in discussing a specific number (maths), but the sentence is actually referring to a small number of prime people. The \"few\" does not logically connect to \"the prime number\" when read sequentially.</p> <p>Rewritten</p> <ul> <li>\"The few prime individuals.\"</li> <li>\"The number of prime individuals is few.\"</li> </ul> <p>Explanation</p> <p>Adding \"individuals\" makes it clear that the sentence is referring to a group of people.</p> <p>As illustrated above, there are a variety of ways to rewrite sentences to avoid garden-pathing:</p> <ul> <li>Adding clarifying words (such as \"that\", \"which\", or \"who\")</li> <li>Changing the verb</li> <li>Adding additional context</li> <li>Splitting the sentence</li> <li>Using active voice</li> <li>Reordering the sentence</li> <li>Eliminating unnecessary modifiers or adjectives</li> <li>Using conjunctions (\"and\", \"but\", \"or\", \"so\", \"for\", etc.)</li> </ul>"},{"location":"guidelines/editing/#miscellaneous","title":"Miscellaneous","text":"<p>Rules that don't fit in the other categories.</p> <p>Miscellaneous</p> Abbreviated titlesNumbersDates <p>While Kaleido typically sticks to British English rules, there is one notable exception: abbreviated titles. We follow the American English convention, and use a full stop after the abbreviation.</p> British English American English Mr Mr. Dr Dr. Mrs Mrs. Ms Ms. <p>The difference between \"Ms.\", \"Miss\", and \"Mrs.\"</p> <p>\"Miss\" is used for unmarried women, \"Mrs.\" for married women, and \"Ms.\" when unsure or as a safe default.</p> <p>Adjust based on context:</p> <ul> <li>For an unmarried teacher (if it's a common joke), use \"Miss\".</li> <li>If marital status is unknown, start with \"Ms.\" and switch to \"Mrs.\" if a marriage is revealed.</li> </ul> <p>Numbers should be spelled out whenever reasonably possible, and if the characters-per-second (CPS) allows for it.</p> Number Spelled Out 36 Thirty-six 100 One hundred / A hundred 991 Nine hundred ninety-one Chicago Manual of Style <p>The Chicago Manual of Style has the following rules for numbers:</p> <ul> <li>Spell out numbers one through one hundred.</li> <li>Spell out multiples of one through one hundred used in combination with hundred, thousand,     or hundred thousand.</li> </ul> <p>These are for written text so are not always applicable to subtitles, but they're generally good rules to follow.</p> <p>In some cases, certain numbers appear frequently in a show. These should ideally be handled consistently throughout the project, and be edited while considering how that may impact future lines.</p> Original Avoid \"Stop right there, Misaka 9982!\" \"Stop right there, Misaka nine-thousand-nine-hundred-eighty-two! <p>Dates should always be written in numeric form.</p> Date Avoid 1st of January First of January Oct. 2 October Second The 25th of December, 1998 The twenty-fifth of December, nineteen-ninety-eight"},{"location":"guidelines/editing/#todo-rest-of-this","title":"TODO: rest of this","text":""},{"location":"guidelines/editing/#characterisation","title":"Characterisation","text":"<ul> <li>Maintaining character voice and personality</li> <li>Natural dialogue, but not too colloquial (written script)</li> <li>Proper use of profanity and explicit language</li> <li>Regional dialects and accents, and the dangers thereof</li> <li>Age-appropriate language</li> </ul>"},{"location":"guidelines/editing/#cultural-adaptation","title":"Cultural Adaptation","text":"<ul> <li>Adapting cultural references for the target audience</li> <li>Preserving the original cultural context</li> <li>When to use each approach</li> <li>Handling honorifics and name suffixes</li> <li>Translating or adapting idioms and proverbs</li> <li>Dealing with wordplay and puns</li> </ul>"},{"location":"guidelines/editing/#formatting","title":"Formatting","text":"<ul> <li>Line breaks and readability</li> <li>Italics and emphasis</li> <li>Off-screen dialogue</li> <li>\"Safe\" tags</li> <li>Etc.</li> </ul>"},{"location":"guidelines/editing/#other-things-of-note","title":"Other Things of Note","text":"<ol> <li> <p>In some cases, \"theatre\" may still be used in American English, where a \"theatre\" is a venue you visit to watch plays, and \"theater\" is the performance-driven art form.\u00a0\u21a9</p> </li> <li> <p>Most of these examples are taken from this paper.\u00a0\u21a9</p> </li> </ol>"},{"location":"guidelines/shenanigans/","title":"Shenanigans","text":"<p>Stub</p> <p>This page is a stub. You can help by expanding it.</p> How can I help? <p>Whip me into writing this page.</p> <p>Shenanigans speak to the more \"fun\" part of fansubbing. They're often meant to be humorous or light-hearted, but can also be used to otherwise enhance the viewer's experience. This comes with risks however, as it is incredibly easy to overdo it.</p>"},{"location":"guidelines/shenanigans/#when-and-what-to-avoid","title":"When and what to avoid","text":"<ul> <li>Overusing effect</li> <li>Implementing shenanigans that clash with the tone of the scene or show</li> <li>Using effects that may cause discomfort or accessibility issues for viewers</li> <li>ALPHATIMING BLEGGGHHH</li> </ul>"},{"location":"guidelines/shenanigans/#timing-based-shenanigans","title":"Timing-based shenanigans","text":"<ul> <li>Fade effects</li> <li>Synchronized text appearance with on-screen events</li> <li>Staggered timing</li> </ul>"},{"location":"guidelines/shenanigans/#motion-based-shenanigans","title":"Motion-based shenanigans","text":"<ul> <li>Text following a character's movement</li> <li>Shaking or vibrating text</li> <li>Sub-on-sub violence, or having subtitles affect other subtitles</li> </ul>"},{"location":"guidelines/shenanigans/#background-shenanigans","title":"Background shenanigans","text":"<p>Shenganigans that play in the background, giving you more leeway to be creative.</p>"},{"location":"guidelines/shenanigans/#other-types-of-shenanigans","title":"Other types of shenanigans","text":"<ul> <li>Font changes</li> <li>Color coding</li> <li>Easter eggs or hidden messages for attentive viewers</li> </ul>"},{"location":"guidelines/technical/","title":"Technical Guidelines","text":"<p>Stub</p> <p>This page is a stub. You can help by expanding it.</p> How can I help? <p>Whip me into writing this page.</p> <p>This section contains technical guidelines for ASS subtitles, mostly involving technical aspects that ensure subtitles display correctly, or otherwise improve accessibility for viewers.</p> <p>These are largely centred on aspects of subtitling outside of directly writing subtitles, but do also touch upon performance and style override supports.</p>"},{"location":"guidelines/technical/#ass-headers","title":"ASS Headers","text":"<ul> <li>Script Info section</li> <li>Title</li> <li>PlayRes</li> <li>LayoutRes</li> <li>Style definitions</li> <li>Common names</li> </ul>"},{"location":"guidelines/technical/#git","title":"Git","text":"<ul> <li>Commit messages</li> <li>Branch naming</li> <li>Pull request guidelines</li> <li>Open-sourcing</li> <li>Versioning</li> </ul>"},{"location":"guidelines/technical/#performance","title":"Performance","text":"<ul> <li>Optimising subtitle rendering</li> <li>Reducing file size</li> <li>\"Hacks\" (i.e. shadtrick)</li> <li>Avoiding unnecessary complexity</li> <li>Libass vs. vsfilter differences</li> </ul>"},{"location":"guidelines/technical/#fonts","title":"Fonts","text":"<ul> <li>Font formats</li> <li>Font collecting</li> <li>Faux-bold and faux-italic</li> <li>Font weight</li> </ul>"},{"location":"guidelines/technical/#muxing","title":"Muxing","text":"<ul> <li>Automated approaches</li> <li>Track naming</li> <li>Track selection</li> <li>File naming</li> <li>Folder structure</li> </ul>"},{"location":"guidelines/technical/#releases","title":"Releases","text":"<ul> <li>File naming conventions</li> <li>Release description and notes</li> <li>Versioning</li> <li>Hiding old releases</li> </ul>"},{"location":"guidelines/timing/","title":"Timing Guidelines","text":"<p>Stub</p> <p>This page is a stub. You can help by expanding it.</p> How can I help? <p>Whip me into writing this page.</p> <p>Timing is possibly the most invisible part of fansubbing. That is, until a line is mistimed and the viewer's immersion is immediately broken.</p> <p>This document aims to provide a set of guidelines for timing subtitles, to help ensure that the subtitles are correctly displayed, and consistently appear where they are expected. This document also covers karaoke timing.</p>"},{"location":"guidelines/timing/#dialogue-timing","title":"Dialogue timing","text":"<ul> <li>Basic principles</li> <li>Lead-in and lead-out times</li> <li>Scene changes</li> <li>Overlapping dialogue</li> </ul>"},{"location":"guidelines/timing/#karaoke-timing","title":"Karaoke timing","text":"<ul> <li>Syllable-by-syllable timing techniques</li> <li>Handling different musical styles and tempos</li> <li>On-screen lyrics and similar</li> </ul>"},{"location":"guidelines/translation/","title":"Translation Guidelines","text":"<p>Stub</p> <p>This page is a stub. You can help by expanding it.</p> How can I help? <p>You can help by writing guidelines for translation. This should cover things such as:</p> <ul> <li>Basic translation philosophies, their differences, when to apply them, etc.</li> <li>Character voice</li> <li>Romanizations styles</li> <li>How to work with an editor</li> <li>Finding and using closed captions</li> <li>Song/poetry/etc. translation</li> <li>Onomatopoeia</li> </ul> <p>You can also help by providing concise examples of working from a pad vs. a pre-timed script.</p> <p>The core of any project is its translation. Without a translation, there's nothing to edit, nothing to typeset, and nothing to style. However, translation is a very complex topic, rife with many different schools of thought, and many different approaches to tackling it.</p> <p>This section will cover some of the basics of writing translations for anime, and will primarily focus on how to prepare your scripts, how to communicate with your editor, and other more technical aspects.</p> <p>Different Approaches</p> <p>There are many different approaches to translation, and no single \"right\" way to do it. This section will be biased towards the domestication philosophy, as that is what Kaleido primarily follows. However, this does not mean that other approaches are wrong or ineffective. Different groups may have different preferences, and each translator should find what works best for them.</p>"},{"location":"guidelines/translation/#preparing-a-script","title":"Preparing a script","text":"<p>Modern translators typically work in one of two ways:</p> <ol> <li>Working from a pad</li> <li>Working from a pre-timed script</li> </ol> <p>We recommend working from a pre-timed script, as it allows you to more easily account for line length, and allows you to easily play back specific lines.</p> <p>Most translators will work with both. Dialogue is typically written in a pre-timed script, but signage may be written on a pad instead.</p>"},{"location":"guidelines/translation/#working-from-a-pad","title":"Working from a pad","text":"<p>...</p>"},{"location":"guidelines/translation/#working-from-a-pre-timed-script","title":"Working from a pre-timed script","text":"<p>...</p>"},{"location":"guidelines/typesetting/","title":"Typesetting guidelines","text":"<p>We won't go much in-depth about typesetting here, but we will provide some basic things to be wary of.</p>"},{"location":"guidelines/typesetting/#faux-bolditalics-and-different-weights","title":"Faux bold/italics and different weights","text":"<p>Try to avoid faux bold and faux italics. This happens when a line is set in bold or italics, but there is no supported font for it.</p> <p>Different weights of the same font introduce a similar problem. If the font you include doesn't support the weight you've selected, it will fall back to a similar weight font. However, if the user has it installed, the text will not display as intended.</p> <p>Different weights and italic fonts become a huge problem when you're using a common font. Try to avoid using common fonts where reasonable, and instead try to use a font that looks similar and has the weight/italics you need.</p> <p>This will be particularly difficult to avoid for the following types of signs<sup>1</sup>:</p> Usage Font Name Phone - Android Roboto Phone - iOS San Francisco Computer - Mac OS X Helvetica Neue Computer - Windows Segoe UI Computer - Ubuntu Ubuntu Command Line - Unix Ubuntu Mono Command Line - Windows Lucida Console Google Search Arial Google Products (YouTube, Gmail, etc) Roboto Blog Titles - Sans Serif Oswald Blog Titles - Serif Playfair <p>But there are still some workarounds:</p> <ol> <li>Set the exact expected weight in the tags.    This can be done using \\b400, for example.</li> <li>Use \\fax to mimic the appearance of italics.    This must be a negative value,    and you generally shouldn't go lower than \\fax-1.</li> <li>Use the shad trick with \\bord to change the appearance of the font weight.</li> </ol>"},{"location":"guidelines/typesetting/#masking","title":"Masking","text":"<p>Generally speaking, Kaleido will mask most signs where possible. This is for a couple reasons:</p> <ol> <li>The original sign often doesn't leave a lot of space for additional translated text.    This makes typesetting very obvious, very distracting, and often more difficult to read.</li> <li>It greatly simplifies the process of typesetting.    Once a mask is in place, you're free to approach the typesetting however you prefer    without having to worry about the original sign too much.    This includes the original blurriness, fonts, and in some extreme cases even colours and shape.</li> </ol> <p>Masking is particularly useful for signs like papers, texts, webpages, and other particularly dense signs.</p> <p>However, be careful not to abuse masking either. It often takes longer, performs worse, and can easily become a crutch if you're not careful.</p>"},{"location":"guidelines/typesetting/#illustrator","title":"Illustrator","text":"<p>Illustrator is a powerful tool, and can be very useful for typesetting, especially alongside Content Aware Fill from Photoshop. However, it often suffers from the same problems as masking, but typically worse.</p> <ol> <li> <p>Table courtesy of Sara Linsley's lettering tutorial \u21a9</p> </li> </ol>"},{"location":"guidelines/styling/dialogue_styling/","title":"Dialogue Styling Guidelines","text":"<p>Dialogue styling is a vital, yet often underappreciated aspect of subtitling. It encompasses the font, colour, and positioning of dialogue, all of which can have a profound impact on the viewer's experience.</p> <p>Out of all topics discussed in this handbook, this is arguably one of the most important. Many groups have different standards and opinions on what makes for good dialogue styling, but they should all generally adhere to the following guidelines.</p>"},{"location":"guidelines/styling/dialogue_styling/#base-style","title":"Base Style","text":"<p>The base style is the default style for all dialogue. You want to make sure it's easy to read and not too distracting.</p> <p>Danger</p> <p>All examples on this page assume 1920\u00d71080 video.  If you are working with some other resolution,  you may need to adjust values accordingly.</p> <p>Styles used by various groups</p> KaleidoGood Job! MediaSubsPleaseDameDesuYoCommieChihiro <p></p> <pre><code>Style: Default,LTFinnegan Medium,72,&amp;H00FFFFFF,&amp;H00FFFFFF,&amp;H00000000,&amp;HA0000000,0,0,0,0,100,100,0,0,1,3.6,1.5,2,200,200,60,1\n</code></pre> <p></p> <pre><code>Style: GJM_Main_1080p,Gandhi Sans,75,&amp;H00FFFFFF,&amp;H000000FF,&amp;H00000000,&amp;HA0000000,-1,0,0,0,100,100,0,0,1,3.6,1.5,2,225,225,60,1\n</code></pre> <p></p> <p>Upsampled (640\u00d7360 \u21d2 1920\u00d71080)</p> <pre><code>Style: Default,Roboto Medium,78,&amp;H00FFFFFF,&amp;H000000FF,&amp;H00000000,&amp;H00000000,0,0,0,0,100,100,0,0,1,3.9,0,2,60,60,69,1\n</code></pre> <p></p> <pre><code>Style: Default,Cronos Pro,78,&amp;H00FFFFFF,&amp;H000000FF,&amp;H0000003B,&amp;H00000000,-1,0,0,0,100,100,0,0,1,3.75,0,2,225,225,45,1\n</code></pre> <p></p> <pre><code>Style: Default,Montara  Gothic,81,&amp;H00FFFFFF,&amp;H00003FFF,&amp;H1E000000,&amp;H96000000,0,0,0,0,100,100,0,0,1,3.6,0,2,135,135,45,1\n</code></pre> <p></p> <pre><code>Style: Default,Slate Pro Medium,70,&amp;H00FFFFFF,&amp;H00FFFFFF,&amp;H00000000,&amp;H96000000,0,0,0,0,100,100,0,0,1,3,1.5,2,255,255,60,1\n</code></pre>"},{"location":"guidelines/styling/dialogue_styling/#font","title":"Font","text":"<p>Like with most things fonts, finding the right one is a matter of personal taste and can take some time. However, there are a handful of ground-rules that should be followed:</p> <ol> <li>Legibility:    The font should be clear and easy on the viewer's eyes,    even at smaller sizes or when viewed from a distance.</li> <li>Serifs:    Fonts should ideally be sans-serif,    but serifs can work if they are clean and easy to read,    and fit the style and aesthetics of the show.</li> </ol> <p>If you're unsure about which font to use, it's a good idea to grab established styling from the bigger subtitling groups and use that as a base for your own.</p> Examples of good dialogue fonts <p>There may be times where a serif font is preferred, based on the style of the show. The pre-established rules for dialogue fonts still apply, but there is more leeway in terms of what font to choose.</p> <p></p> <p>The size of the dialogue is determined by the font size. This should be set to a value that is large enough to be easily read, but not so large that it takes up too much of the screen. Values between 70 and 80 are generally recommended.</p> <p>An often-overlooked part of fonts to consider is line spacing. If spaced too far apart, dialogue lines may appear disconnected to a viewer. On the other hand, spacing lines too close together can look cluttered. Due to peculiarities in ASS rendering<sup>1</sup>, this also changes the rendered font size.</p> <p>Visual example</p> <p></p> <p>When dealing with a font with ligatures that can be confused for other characters, it is recommended to either disable them in some fashion if your subtitling renderer supports that, or in the case of ASS, set a font spacing of 0.01 in your dialogue style.</p> <p>While not required, it is highly advised you use a font that supports all common characters, including characters such as the em dash (\u2014). Historically, subtitling groups have used in-line tags to widen a regular hyphen, but this may introduce problems if the viewer overrides the style, and is also simply a less clean solution and a bad habit to get into.</p> <p>If you're subtitling in languages other than English, make sure the font supports the characters of the languages you are subtitling for. This is especially important for languages with a large number of characters such as Japanese, but also languages that make common use of diacritics such as Spanish, French, and German.</p> <p>If you're a commercial entity, you must also make sure that the font is licensed for commercial use. Failure to do so may result in legal action from the font's copyright holder.</p> <p>Finally, you should consider the file size of the font you are using. Fonts with large character sets can be quite large, increasing the total size of your subtitles to include a lot of characters you may not need.</p>"},{"location":"guidelines/styling/dialogue_styling/#colour","title":"Colour","text":"<p>The colour is arguably the most important part of dialogue styling. Using clashing or hard-to-read colours will immediately detract from the viewer's experience, so it's important to choose a colour that is easy on the eyes that is still high-contrast enough to not blend into the video.</p> <p>A common mantra for colour choices in the fansubbing community is:</p> <p></p> <p>Colours with a similar effect is yellow, but that's generally harder to read, and may cause eye strain.</p> <p>Avoid changing the colour of dialogue unless there is a very specific reason to do so. Changing the colours constantly will draw too much attention to the subtitles themselves, and distract the viewer from the video. Avoid doing silly and unnecesarily distracting things like changing the border colour to match the speaker's hair colour.</p> <p>Borders should be a dark colour, as this increases contrast and improves readability. In general, black is the safest choice, as it is easy on the eyes. Depending on the aesthetic of the show, other colours may be used to better blend in with the video. Examples include videos with a sepia filter, or a slight tint across the entire video. However, enabling high contrast should remain the end-goal.</p> <p>In fansubbing, it is commonplace to use a different colour for overlapping dialogue that is kept at the same alignment as the dialogue it is overlapping. A distinction must be made, so most subtitling groups will use a different border colour.</p> <p>Alt styles used by various groups</p> KaleidoGood Job! MediaDameDesuYo <p></p> <pre><code>Style: Alt,LTFinnegan Medium,72,&amp;H00FFFFFF,&amp;H00FFFFFF,&amp;H00564100,&amp;HA0000000,0,0,0,0,100,100,0,0,1,3.6,1.5,2,200,200,60,1\n</code></pre> <p></p> <pre><code>Style: GJM_Overlap_1080p,Gandhi Sans,75,&amp;H00FFFFFF,&amp;H000000FF,&amp;H00743E15,&amp;HA0000000,-1,0,0,0,100,100,0,0,1,3.6,1.5,2,225,225,60,1\n</code></pre> <p></p> <pre><code>Style: Default - Alt,Cronos Pro,78,&amp;H00FFFFFF,&amp;H000000FF,&amp;H003C1A00,&amp;H00000000,-1,0,0,0,100,100,0,0,1,3.75,0,2,225,225,45,1\n</code></pre>"},{"location":"guidelines/styling/dialogue_styling/#subtitle-location","title":"Subtitle location","text":""},{"location":"guidelines/styling/dialogue_styling/#positioning","title":"Positioning","text":"<p>Dialogue should be centred on screen, and be regularly positioned at the bottom of the screen. Lines positioned in this manner are easier to read and help the viewer follow the dialogue.</p> <p>Dialogue positioned on the top of the screen is generally reserved for background lines, lines that are not important for the viewer to understand, or lines that would otherwise cover important information at the bottom of the frame.</p> <p>Alt styling is used for overlapping dialogue that is positioned at the same location as the current line. This should primarily be done if the dialogue is important enough for the viewer to read. If it's not important, it should ideally be displayed in a different position instead.</p> <p>Dialogue should attempt to remain in a relatively same-y position as much as is reasonably possible. This helps the viewer better follow the dialogue and prevents the need to readjust their eyes. Subtle shifts in dialogue position can still be used to aid readability if it would otherwise overlap with certain parts of the video, such as text.</p> <p>In certain scenes or for certain types of shows, there is a bit more leeway in being \"fun\" with dialogue positioning. However, this should be used sparingly, and be avoided in important scenes so as not to distract the viewer's attention. We will cover this in more depth in the shenanigans document.</p> <p>Example of 'fun' positioning</p> <p></p>"},{"location":"guidelines/styling/dialogue_styling/#margins","title":"Margins","text":"<p>Safe margins are margins that keep the dialogue centred, even when there is a large amount of text on screen. If the margins are too small, the dialogue will \"hug\" the edges of the screen and become more difficult to read. If the margins are too large, it will start breaking lines more aggressively, which can have a negative impact on the timing and editing of the line.</p> <p>Kaleido's default margins: Left 200, Right 200, Vert 60</p> <p></p> <p>Margins also decide when a line of dialogue will be automatically broken. We will cover this in more depth in the editing document, but it's important to understand that you will want to avoid breaking lines into more than 2 segments. Limiting it to 2 segments at most helps to keep the dialogue from being too fragmented, and makes it easier for the viewer to read without being overwhelmed.</p> <p>When manually changing the position of dialogue, you should ideally override the margins instead of hardcoding a <code>\\pos</code> value. This allows for viewers to override the style, as libass will determine that any event with a <code>\\pos</code> value set is not dialogue, and thus not eligible for being overridden.</p>"},{"location":"guidelines/styling/dialogue_styling/#outline","title":"Outline","text":""},{"location":"guidelines/styling/dialogue_styling/#borders","title":"Borders","text":"<p>Dialogue styling should always have a border. As explained in the colours section, borders help to improve readability by increasing contrast between the dialogue and the video background.</p> <p>Safe values</p> <p>A safe border width is between 2.5px and 4px.</p> <p>Borders should ideally not be too thick, as this is less pleasant on the eyes, but also not too thin, as that can make the dialogue blend in with the video too much.</p>"},{"location":"guidelines/styling/dialogue_styling/#shadows","title":"Shadows","text":"<p>Shadows are a nice-to-have addition, but is not required for dialogue to be readable. It helps the dialogue \"pop\" out of the background, further increasing readability. Shadows should ideally always be fully black and slightly transparent. This helps to ensure that the shadow is not too heavy and does not overpower the dialogue.</p> <p>Safe values</p> <p>A safe shadow offset is between 1px and 2px, with a shadow transparency of 140 to 180.</p> <p>Kaleido's default borders and shadows</p> <p>Kaleido uses a border width of 3.6px, a shadow offset of 1.5px, and a shadow transparency of 160.</p> <p> </p>"},{"location":"guidelines/styling/dialogue_styling/#resampling","title":"Resampling","text":"<p>Danger</p> <p>Only resample subtitles if you're authoring them yourself! Don't blindly resample dialogue from other releases!</p> <p>When dealing with different resolutions, dialogue styles should be resampled to the storage resolution. This means that if you're targetting a 720x480p anamorphic resolution video that stretches to 864x480, you should resample your dialogue to 720x480.</p> <p>Warning</p> <p>When dealing with anamorphic video, you must account for the display aspect ratio. If your video stretches horizontally, you should adjust the X scale value accordingly, and vice versa for vertically stretching video. Failure to do so will mean your dialogue won't scale correctly!</p> <p>Dialogue at different resolutions may require additional accessibility considerations. For example, if the viewer does not scale their video in their player, the dialogue may appear too small to be readable. While you can generally speaking safely assume that the rendered subtitles will be upscaled, this is not always the case, so it is important to ensure that the dialogue is still readable at the original resolution.</p> <ol> <li> <p>Specifically, \\fs doesn't actually determine font size, rather than line spacing. Two lines with \\fs72 will have their baselines 72px apart, and be scaled accordingly, causing font size to be reduced.\u00a0\u21a9</p> </li> </ol>"},{"location":"guidelines/styling/songstyling/","title":"Song Styling Guidelines","text":"<p>Almost every anime contains songs, and it is standard practice to style them. But not all songs and accompanying visuals are created equal. Some are simple, only requiring simple styling to make them stand out from the dialogue. Others are more complex, with very dynamic and creative visuals.</p>"},{"location":"guidelines/styling/songstyling/#general-guidelines","title":"General Guidelines","text":"<p>When styling songs, it's crucial to strike a balance between creativity and readability. The primary goal should be to enhance the viewer's experience, and this can be a very delicate task.</p> <p>Below are some approaches for determining how to style opening and ending songs.</p>"},{"location":"guidelines/styling/songstyling/#credit-matching","title":"Credit Matching","text":"<p>The most common and often safest form of song styling is to simply match the credit styling. Most credits are simple, and it doesn't take much effort to match the styling.</p> <p>Examples of simple credit matching</p> Bishounen Tanteidan OP1Gunslinger Girl OP1Kaguya-sama OP1Pon no Michi ED1 <p> </p> <p>Styling by herkz (Commie)</p> <p> </p> <p>Styling by LightArrowsEXE (Kaleido)</p> <p> </p> <p>Styling by Areki (Good Job! Media)</p> <p> </p> <p>Styling by SHSL_Ezra (NovaWorks)</p> <p>This type of approach can be very easy, but sometimes credits can be very complex. At that point, how close you try to match the credit styling is an exercise left to the discretion of the styler, and the more complex the effect, the longer it may take to match.</p> <p>Examples of credit matching with various levels of complexity</p> Re:Zero OP1Neverland OP1Trinity Seven OP1Psycho-Pass OP1Kami no Tou S2 OP1 <p> </p> <p>Styling by tsuku (DameDesuYo)</p> <p> </p> <p>Styling by Colgatto (Good Job! Media)</p> <p> </p> <p>Styling by logarithm (DameDesuYo)</p> <p> </p> <p>Styling by Ryu (SCY)</p> <p> </p> <p>Styling by Nalu and Emzy (One Fansub)</p> <p>TODO: rest of this page</p> <ul> <li>Distinct styling</li> <li>Consider mood and tone</li> <li>Accounting for the visuals</li> <li>Ensure readability</li> </ul>"},{"location":"guidelines/styling/songstyling/#openings-and-endings","title":"Openings and Endings","text":"<ul> <li>Visually appealing</li> <li>Match the animation and/or aesthetics</li> <li>Consider timing</li> <li>Consistency</li> <li>Romaji</li> </ul>"},{"location":"guidelines/styling/songstyling/#insert-songs","title":"Insert Songs","text":"<ul> <li>Avoid overpowering the dialogue</li> <li>Use simpler styling</li> <li>Romaji?</li> <li>Maintain consistency</li> <li>Importance of the song in context</li> </ul>"},{"location":"guidelines/styling/songstyling/#karaoke","title":"Karaoke","text":"<ul> <li>Timing</li> <li>Attack and release</li> <li>Singable translations</li> </ul>"},{"location":"release/description/","title":"Release Description Template","text":"<p>This document outlines the structure and content of a typical anime release description.</p> <p>It's designed to provide comprehensive information about the release, including technical details, staff credits, usage guidelines, and social media links.</p>"},{"location":"release/description/#cover-art-and-basic-information","title":"Cover Art and Basic Information","text":"<p>The description typically starts with a cover image of the anime, followed by a table containing basic information about the series:</p> <ul> <li>Title: The official title of the anime<ul> <li>This will typically be the romanized title</li> </ul> </li> <li>TVDB ID: The identifier for the series on TheTVDB</li> <li>AniDB ID: The identifier for the series on AniDB</li> <li>Season: The season number and ordering information<ul> <li>The order is obtained from TVDB</li> </ul> </li> </ul> <p>Basic Information Table</p> <pre><code>| Anime Information |                                 |\n| ----------------- | ------------------------------- |\n| **Title**         | Anime Name                      |\n| **TVDB ID**       | [TVDB ID][tvdb]                 |\n| **AniDB ID**      | [AniDB ID][anidb]               |\n| **Season**        | Season Number (Watch Order)     |\n</code></pre>"},{"location":"release/description/#staff-credits","title":"Staff Credits","text":"<p>Two tables are usually included to credit the staff involved in the release:</p> <ol> <li>Episode Staff<ul> <li>Lists roles such as Translation, Editing, Encoding, Timing, Typesetting, and Quality Control,    along with the contributors for each role.</li> </ul> </li> <li>Song Staff<ul> <li>Credits for Opening and Ending themes and insert songs,     including Translation, Editing, (Karaoke) Timing, Typesetting, and Song Styling.</li> </ul> </li> </ol> <p>If the song list is too large, it can be split off into a separate table.</p> <p>Example</p> CombinedSplit off <pre><code>| Episode Staff         |                    |     | Song Staff            | Opening        | Ending         |\n| --------------------- | ------------------ | --- | --------------------- | -------------- | -------------- |\n| **Translation**       | Translator A       |     | **Translation**       | Translater I   | Translater I   |\n| **Translation Check** | Checker B          |     | **Translation Check** | Checker J      | Checker J      |\n|                       | Checker C          |     | **Editing**           | Editor K       | Editor K       |\n| **Editing**           | Editor D           |     | **Timing**            | Timer M        | Timer M        |\n| **Encode**            | Editor D           |     | **Typesetting**       | Timer M        | Typesetter N   |\n| **Timing**            | Timer E            |     |                       | Typesetter O   |                |\n| **Typesetting**       | Editor D           |     | **Song Styling**      | Timer M        | Timer M        |\n</code></pre> <pre><code>| Episode Staff         |              |\n| --------------------- | ------------ |\n| **Translation**       | Translator A |\n| **Translation Check** | Checker B    |\n| **Editing**           | Editor C     |\n| **Encode**            | Encoder D    |\n| **Timing**            | Timer E      |\n| **Typesetting**       | Typesetter F |\n| **Quality Control**   | QC G         |\n|                       | QC H         |\n\n| Song Staff  | Translation  | Editing  | (Karaoke) Timing | Song Styling | Typesetting  |\n| ----------- | ------------ | -------- | ---------------- | ------------ | ------------ |\n| OP          | Translator I | Editor K | Timer M          | Styler Q     | Typesetter O |\n| ED (S01E01) | Translator J | Editor L | Timer N          | Styler R     | Typesetter O |\n| ED (S01E02) | Translator J | Editor L | Timer N          | Styler R     | Typesetter O |\n| ED (S01E03) | Translator J | Editor K | Timer N          | Styler R     | Typesetter O |\n| ED (S01E04) | Translator J | Editor L | Timer N          | Styler R     | Typesetter O |\n| ED (S01E05) | Translator J | Editor K | Timer N          | Styler R     | Typesetter O |\n...\n</code></pre>"},{"location":"release/description/#technical-information","title":"Technical Information","text":""},{"location":"release/description/#video","title":"Video","text":"<p>Provides details about the video source and specifications:</p> <ul> <li>Sources: Origin of the video (e.g., Blu-ray)</li> <li>Resolution: Video resolution (e.g., 1920x1080p)</li> <li>Codec: Video codec used (e.g., H.265 10-bit)</li> <li>Aspect Ratio: The aspect ratio of the video</li> <li>Extra: Links to video comparisons and media info</li> </ul> <p>Video Table</p> <pre><code>|                  |                                 |                        |\n| ---------------- | ------------------------------- | ---------------------- |\n| **Sources**      | [Blu-ray (company)][source-url] |                        |\n| **Resolution**   | 1920x1080p                      |                        |\n| **Codec**        | H.265 (x265) 10-bit             |                        |\n| **Aspect Ratio** | 16:9                            |                        |\n| **Extra**        | [Video Comparison][slowpics]    | [MediaInfo][mediainfo] |\n</code></pre>"},{"location":"release/description/#audio","title":"Audio","text":"<p>A table describing the audio track(s):</p> <ul> <li>Track language</li> <li>Codec</li> <li>Channel configuration</li> <li>Bitrate</li> <li>Source</li> <li>Default and forced flags</li> </ul> <p>Audio Table</p> Mono AudioDual Audio <pre><code>| Track        | Codec | Channels | Bitrate  | Source                          | Default | Forced |\n| ------------ | ----- | -------- | -------- | ------------------------------- | ------- | ------ |\n| **Japanese** | Opus  | 2.0      | 192 kbps | [Blu-ray (company)][source-url] | Yes     | No     |\n</code></pre> <pre><code>| Track        | Codec | Channels | Bitrate  | Source                          | Default | Forced |\n| ------------ | ----- | -------- | -------- | ------------------------------- | ------- | ------ |\n| **Japanese** | Opus  | 2.0      | 192 kbps | [Blu-ray (company)][source-url] | Yes     | No     |\n| **English**  | AAC   | 2.0      | 192 kbps | [Blu-ray (company)][source-url] | Yes     | No     |\n</code></pre>"},{"location":"release/description/#subtitles","title":"Subtitles","text":"<p>A table listing available subtitle tracks:</p> <ul> <li>Track description</li> <li>Language</li> <li>Language code</li> <li>Format (e.g., ASS, SRT)</li> <li>Default and forced status</li> </ul> <p>Subtitle Table</p> Regular TracksDual AudioExtra Tracks <pre><code>| Track                             | Language | Language Code | Format | Default | Forced |\n| --------------------------------- | -------- | ------------- | ------ | ------- | ------ |\n| **Full Subtitles**                | English  | eng           | ASS    | Yes     | No     |\n| **Full Subtitles (Honorifics)**   | English  | enm           | ASS    | Yes     | No     |\n</code></pre> <pre><code>| Track                             | Language | Language Code | Format | Default | Forced |\n| --------------------------------- | -------- | ------------- | ------ | ------- | ------ |\n| **Full Subtitles**                | English  | eng           | ASS    | Yes     | No     |\n| **Full Subtitles (Honorifics)**   | English  | enm           | ASS    | Yes     | No     |\n| **Signs &amp; Songs**                 | English  | sng           | ASS    | No      | Yes    |\n</code></pre> <pre><code>| Track                             | Language | Language Code | Format | Default | Forced |\n| --------------------------------- | -------- | ------------- | ------ | ------- | ------ |\n| **Full Subtitles**                | English  | eng           | ASS    | Yes     | No     |\n| **Full Subtitles (Honorifics)**   | English  | enm           | ASS    | Yes     | No     |\n| **Full Subtitles (Trivia Notes)** | English  | eng           | ASS    | No      | No     |\n</code></pre>"},{"location":"release/description/#additional-information","title":"Additional Information","text":"<ul> <li>Special features of the release (e.g., alternative subtitle tracks)</li> <li>Contact information (e.g., Discord server link)</li> <li>Social media links (e.g., Twitter)</li> <li>Supported media players</li> <li>Usage and redistribution guidelines</li> <li>Offers for additional resources (e.g., song styling for other groups)</li> </ul>"}]}